import 'package:flutter/material.dart';

import '../controlers/controladores.dart';

class Ensaios extends StatefulWidget {
  final PageController pageController;
  const Ensaios({Key? key, required this.pageController}) : super(key: key);

  @override
  State<Ensaios> createState() => _EnsaiosState();
}

bool _switchbalanca = false;

class _EnsaiosState extends State<Ensaios> {
  final Controllers _controladores = Controllers();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: body(),
    );
  }

  body() {
    return SingleChildScrollView(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.start,
        children: [
          Container(
            width: 10,
          ),
          Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Row(
                children: const [
                  Text(
                    " Ensaio Previo",
                    style: TextStyle(fontSize: 22, fontWeight: FontWeight.w400),
                  ),
                ],
              ),
              const Divider(height: 10),
              Row(children: [
                Container(width: 20),
                const Divider(height: 80),
                Column(
                  children: [
                    const Text('Pontos de Calibração'),
                    const Divider(height: 10),
                    SizedBox(
                      width: 100,
                      child: Column(
                        children: [
                          TextField(
                            enabled: true,
                            decoration: const InputDecoration(
                              hintText: "Ponto de Calibração",
                              border: OutlineInputBorder(),
                            ),
                            controller: _controladores.user,
                            textAlign: TextAlign.center,
                          ),
                          const Divider(height: 10),
                          TextField(
                            enabled: true,
                            decoration: const InputDecoration(
                              hintText: "Ponto de Calibração",
                              border: OutlineInputBorder(),
                            ),
                            controller: _controladores.user,
                            textAlign: TextAlign.center,
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
                Container(width: 20),
                Column(
                  children: [
                    const Text('Peso(s) Padrão (mc)'),
                    const Divider(height: 10),
                    SizedBox(
                      width: 100,
                      child: Column(
                        children: [
                          TextField(
                            enabled: true,
                            decoration: const InputDecoration(
                              hintText: "Peso(s) Padrão (mc)",
                              border: OutlineInputBorder(),
                            ),
                            controller: _controladores.user,
                            textAlign: TextAlign.center,
                          ),
                          const Divider(height: 10),
                          TextField(
                            enabled: true,
                            decoration: const InputDecoration(
                              hintText: "Peso(s) Padrão (mc)",
                              border: OutlineInputBorder(),
                            ),
                            controller: _controladores.user,
                            textAlign: TextAlign.center,
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
                Container(width: 20),
                Column(
                  children: [
                    const Text('Indicação na Balança'),
                    const Divider(height: 10),
                    Row(
                      children: [
                        SizedBox(
                          width: 100,
                          child: Column(
                            children: [
                              TextField(
                                enabled: true,
                                decoration: const InputDecoration(
                                  hintText: "Indicação na Balança",
                                  border: OutlineInputBorder(),
                                ),
                                controller: _controladores.user,
                                textAlign: TextAlign.center,
                              ),
                              const Divider(height: 10),
                              TextField(
                                enabled: true,
                                decoration: const InputDecoration(
                                  hintText: "Indicação na Balança",
                                  border: OutlineInputBorder(),
                                ),
                                controller: _controladores.user,
                                textAlign: TextAlign.center,
                              ),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
                Container(width: 20),
                Column(
                  children: [
                    const Text('Erro'),
                    const Divider(height: 10),
                    SizedBox(
                      width: 100,
                      child: Column(
                        children: [
                          TextField(
                            enabled: true,
                            decoration: const InputDecoration(
                              hintText: "Erro",
                              border: OutlineInputBorder(),
                            ),
                            controller: _controladores.user,
                            textAlign: TextAlign.center,
                          ),
                          const Divider(height: 10),
                          TextField(
                            enabled: true,
                            decoration: const InputDecoration(
                              hintText: "Erro",
                              border: OutlineInputBorder(),
                            ),
                            controller: _controladores.user,
                            textAlign: TextAlign.center,
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
                Container(width: 50),
                Column(
                  children: [
                    const Text('Ajuste?'),
                    const Divider(height: 10),
                    SizedBox(
                      width: 100,
                      child: Column(
                        children: [
                          const Text("Não"),
                          Switch(
                            value: _switchbalanca,
                            onChanged: (bool newValue) {
                              setState(() {
                                _switchbalanca = newValue;
                              });
                            },
                          ),
                          const Text("Sim"),
                        ],
                      ),
                    ),
                  ],
                ),
                Container(width: 50),
                Column(
                  mainAxisAlignment: MainAxisAlignment.end,
                  children: [
                    const Text('Carga de Ajuste/ Peso Padrão:'),
                    const Divider(height: 10),
                    SizedBox(
                      width: 100,
                      child: Column(
                        children: [
                          TextField(
                            enabled: true,
                            decoration: const InputDecoration(
                              hintText: "Carga de Ajuste/ Peso Padrão:",
                              border: OutlineInputBorder(),
                            ),
                            controller: _controladores.user,
                            textAlign: TextAlign.center,
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
                Container(width: 20),
                Column(
                  children: [
                    const Text('Ref.ª:'),
                    const Divider(height: 10),
                    SizedBox(
                      width: 100,
                      child: Column(
                        children: [
                          TextField(
                            enabled: true,
                            decoration: const InputDecoration(
                              hintText: "Ref.ª:",
                              border: OutlineInputBorder(),
                            ),
                            controller: _controladores.user,
                            textAlign: TextAlign.center,
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ]),
            ],
          ),
          const Divider(
            height: 10,
          ),
          //ROW FVCKING TWO
          Row(mainAxisAlignment: MainAxisAlignment.center, children: [
            Container(width: 20),
            const Divider(height: 80),
            SizedBox(
              width: 300,
              child: Column(
                children: [
                  const Text(
                    "Cliente",
                  ),
                  TextField(
                    onChanged: (value) {
                      setState(() {});
                    },
                    decoration: const InputDecoration(
                      hintText: "Cliente",
                      border: OutlineInputBorder(),
                    ),
                    controller: _controladores.cliente,
                    textAlign: TextAlign.center,
                  ),
                ],
              ),
            ),
            Container(width: 100),
            SizedBox(
              width: 300,
              child: Column(
                children: [
                  const Text('Morada'),
                  TextField(
                    enabled: true,
                    decoration: const InputDecoration(
                      hintText: "Morada",
                      border: OutlineInputBorder(),
                    ),
                    controller: _controladores.morada,
                    textAlign: TextAlign.center,
                  ),
                ],
              ),
            ),
            Container(width: 100),
            SizedBox(
              width: 300,
              child: Column(
                children: [
                  const Text("Codigo Postal"),
                  TextField(
                    controller: _controladores.cepController,
                    decoration: const InputDecoration(
                      hintText: "Codigo Postal",
                      border: OutlineInputBorder(),
                    ),
                    inputFormatters: [_controladores.cepF],
                    textAlign: TextAlign.center,
                  ),
                ],
              ),
            ),
          ]),
          //FVCKING ROW 3

          /////////////////////////////////
          ///////THIS SHIT A 4 ROW/////////
          /////////////////////////////////

          const Divider(height: 1),

          const Divider(
            height: 40,
            color: Colors.transparent,
          ),

          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              SizedBox(
                width: 100,
                height: 50,
                child: ElevatedButton(
                  child: const Text('Voltar'),
                  onPressed: () {
                    widget.pageController.animateToPage(0,
                        duration: const Duration(milliseconds: 400),
                        curve: Curves.easeInOut);
                  },
                ),
              ),
              Container(width: 10),
              SizedBox(
                width: 100,
                height: 50,
                child: ElevatedButton(
                  child: const Text('Proximo'),
                  onPressed: () {
                    widget.pageController.animateToPage(1,
                        duration: const Duration(milliseconds: 400),
                        curve: Curves.easeInOut);
                  },
                ),
              ),
            ],
          )
        ],
      ),
    );
  }
}




ROW ENSAIO_PESAGEM.DART


Row(
              children: [
                const Text('1'),
                Column(
                  children: [
                    const Divider(height: 5),
                    SizedBox(
                      width: 50,
                      child: TextField(
                        enabled: true,
                        decoration: const InputDecoration(
                          hintText: "",
                          border: OutlineInputBorder(),
                        ),
                        controller: _controladores.user,
                        textAlign: TextAlign.center,
                      ),
                    ),
                    const Divider(height: 5),
                    SizedBox(
                      width: 50,
                      child: TextField(
                        enabled: true,
                        decoration: const InputDecoration(
                          hintText: "",
                          border: OutlineInputBorder(),
                        ),
                        controller: _controladores.user,
                        textAlign: TextAlign.center,
                      ),
                    ),
                    const Divider(height: 5),
                    SizedBox(
                      width: 50,
                      child: TextField(
                        enabled: true,
                        decoration: const InputDecoration(
                          hintText: "",
                          border: OutlineInputBorder(),
                        ),
                        controller: _controladores.user,
                        textAlign: TextAlign.center,
                      ),
                    ),
                    const Divider(height: 5),
                    SizedBox(
                      width: 50,
                      child: TextField(
                        enabled: true,
                        decoration: const InputDecoration(
                          hintText: "",
                          border: OutlineInputBorder(),
                        ),
                        controller: _controladores.user,
                        textAlign: TextAlign.center,
                      ),
                    ),
                    const Divider(height: 5),
                    SizedBox(
                      width: 50,
                      child: TextField(
                        enabled: true,
                        decoration: const InputDecoration(
                          hintText: "",
                          border: OutlineInputBorder(),
                        ),
                        controller: _controladores.user,
                        textAlign: TextAlign.center,
                      ),
                    ),
                  ],
                ),
              ],
            ),








 child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  const Divider(height: 5),
                  const SizedBox(
                    child: Text('Pontos de Calibração'),
                  ),
                  const SizedBox(
                    child: Text('Peso Padrão'),
                  ),
                  const SizedBox(
                    child: Text('mc'),
                  ),
                  Column(
                    children: const [
                      SizedBox(
                        child: Text('Cargas de Substituição'),
                      ),
                      Divider(
                        height: 10,
                        color: Colors.black,
                      ),
                      SizedBox(
                        child: Text('Lsub'),
                      ),
                    ],
                  ),
                  Column(
                    children: const [
                      SizedBox(
                        child: Text('Total Carga Teste'),
                      ),
                      Divider(
                        height: 10,
                        color: Colors.black,
                      ),
                      SizedBox(
                        child: Text('Lt'),
                      ),
                    ],
                  ),
                ],
              ),







PARTE DAS Caracteristicas


Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Column(
                children: [
                  const Divider(height: 20),
                  Row(
                    crossAxisAlignment: CrossAxisAlignment.end,
                    children: [
                      Container(
                        width: 20,
                      ),
                      const Text(
                        'Caracteristicas do Instrumento',
                        style: TextStyle(fontSize: 20),
                      ),
                    ],
                  ),
                  const Divider(
                    height: 20,
                  ),
                  IntrinsicWidth(
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.start,
                      children: [
                        Container(width: 20),
                        const Divider(height: 150),
                        Column(
                          children: [
                            buildTextField('Max:', _controladores.cimax,
                                [_controladores.cimaxF]),
                            SizedBox(width: 100),
                            buildTextField(
                                'd:', _controladores.d, [_controladores.dF]),
                          ],
                        ),
                        Container(width: 100),
                        Column(
                          children: [
                            buildDropdownButton('Unidade:', dropdownValue, [
                              'kg',
                              'g',
                              'mg',
                              'mN',
                              'cN',
                              'N',
                              'daN',
                              'kn',
                              'lbf',
                              'oZ',
                              'glm2'
                            ], (String? newValue) {
                              setState(() {
                                dropdownValue = newValue!;
                              });
                            },
                            ),
                            SizedBox(width: 100),
                            buildTextField2(
                                'dT:', _controladores.dT, [_controladores.dTF]),
                          ],
                        ),
                      ],
                    ),
                  ),
                ],
              ),
              Container(width: 15),
              Container(
                height: 100,
                width: 1.0,
                color: Colors.grey.withOpacity(0.5),
              ),
              Column(
                children: [
                  const Divider(height: 20),
                  Row(
                    crossAxisAlignment: CrossAxisAlignment.end,
                    children: [
                      Container(
                        width: 20,
                      ),
                      const Text(
                        'Balança com aprovação de modelo?',
                        style: TextStyle(fontSize: 20),
                      ),
                    ],
                  ),
                  const Divider(
                    height: 20,
                  ),
                  Row(mainAxisAlignment: MainAxisAlignment.start, children: [
                    Container(width: 20),
                    const Divider(height: 150),
                    SizedBox(
                      child: Row(
                        children: [
                          const Text("Não"),
                          Switch(
                            value: _switchbalanca,
                            onChanged: (bool newValue) {
                              setState(() {
                                _switchbalanca = newValue;
                              });
                            },
                          ),
                          const Text("Sim"),
                        ],
                      ),
                    ),
                  ]),
                ],
              ),
              Container(width: 15),
              Container(
                height: 100,
                width: 1.0,
                color: Colors.grey.withOpacity(0.5),
              ),
              Column(
                children: [
                  const Divider(height: 20),
                  Row(
                    crossAxisAlignment: CrossAxisAlignment.end,
                    children: [
                      Container(
                        width: 20,
                      ),
                      const Text(
                        'Caracteristicas do Instrumento',
                        style: TextStyle(fontSize: 20),
                      ),
                    ],
                  ),
                  const Divider(
                    height: 20,
                  ),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Container(width: 20),
                      Column(
                        children: const [
                          Text('Temperatura [ ºC ]:'),
                        ],
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          buildSizedBoxColumn(
                            'Inicial:',
                            _controladores.tempInit,
                            [_controladores.tempInitF],
                          ),
                          Container(width: 100),
                          buildSizedBoxColumn(
                            'Final:',
                            _controladores.tempFinal,
                            [_controladores.tempFinalF],
                          ),
                        ],
                      ),
                    ],
                  ),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Container(width: 80),
                      const Text('HR [ % ]:'),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          buildSizedBoxColumn(
                            'Inicial:',
                            _controladores.objeto,
                            [_controladores.tempInitF],
                          ),
                          Container(width: 100),
                          buildSizedBoxColumn(
                            'Final:',
                            _controladores.marca,
                            [_controladores.tempFinalF],
                          ),
                        ],
                      ),
                    ],
                  ),
                ],
              ),
            ],
          ),












          Column(
                        children: [
                          Container(
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(8.0),
                                border: Border.all(
                                  color: Colors.grey.withOpacity(0.5),
                                  width: 1.0,
                                ),
                              ),
                              child: DropdownButton<String>(
                                dropdownColor: Colors.white,
                                elevation: 2,
                                underline: Container(),
                                focusColor: Colors.transparent,
                                value: dropdownValue,
                                onChanged: (String? newValue) {
                                  setState(() {
                                    dropdownValue = newValue!;
                                  });
                                },
                                items: <String>[
                                  'kg',
                                  'g',
                                  'mg',
                                  'mN',
                                  'cN',
                                  'N',
                                  'daN',
                                  'kn',
                                  'lbf',
                                  'oZ',
                                  'glm2'
                                ].map<DropdownMenuItem<String>>((String value) {
                                  return DropdownMenuItem<String>(
                                    value: value,
                                    child: Text(value),
                                  );
                                }).toList(),
                              )),
                          SizedBox(width: 100),
                        ],
                      ),